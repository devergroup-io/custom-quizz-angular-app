{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/level-detail/level-detail.component.ts","webpack:///src/app/level-detail/level-detail.component.html","webpack:///src/app/level-detail/question/question.component.ts","webpack:///src/app/level-detail/question/question.component.html","webpack:///src/app/result/result.component.ts","webpack:///src/app/result/result.component.html","webpack:///src/app/services/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","csvToArr","csv","allTextLines","split","headers","lines","i","length","data","tarr","j","push","serializeCsvData","rows","quesDict","forEach","row","level","en","trim","meanings","HomeComponent","http","dataService","router","csvURL","levels","get","responseType","subscribe","serializeData","setQuesDictFromHome","Object","error","console","log","setQuestionsFromHome","navigate","skipLocationChange","talkify","window","voice","Html5Player","forceLanguage","setRate","LevelDetailComponent","questions","totalChoices","QUESTION_NUMBER_PER_LEVEL","choices","currentIndex","question","valueProcessBar","getQuestions","playText","getTotalChoices","getChoices","opts","take","shuffle","filter","choice","Math","round","onNextQuestion","QuestionComponent","nextQuestion","timer","clearTimeout","setTimeout","onClickAnswer","answer","emit","setAnswersIncorrect","ResultComponent","answersIncorrect","time","now","Date","getAnswersIncorrect","getFullYear","getMonth","getDate","print","onClickPrint","DataService","totalQuestions","map","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LevelDetailComponent } from './level-detail/level-detail.component';\nimport { ResultComponent } from './result/result.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'level/:id',\n    component: LevelDetailComponent,\n  },\n  {\n    path: 'result',\n    component: ResultComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LevelDetailComponent } from './level-detail/level-detail.component';\nimport { QuestionComponent } from './level-detail/question/question.component';\nimport { ResultComponent } from './result/result.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LevelDetailComponent,\n    QuestionComponent,\n    ResultComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule, NgbModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IQuestion, DataService } from '../services/data.service';\nimport { Router } from '@angular/router';\n\nconst csvToArr = (csv: string) => {\n  const allTextLines = csv.split(/\\r|\\n|\\r/);\n  const headers = allTextLines[0].split(',');\n  const lines = [];\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < allTextLines.length; i++) {\n    const data = allTextLines[i].split(',');\n    if (data.length === headers.length) {\n      const tarr = [];\n      for (let j = 0; j < headers.length; j++) {\n        tarr.push(data[j]);\n      }\n      lines.push(tarr);\n    }\n  }\n  return lines;\n};\n\nconst serializeCsvData = (\n  rows: Array<[number, string, string, string, string]>\n) => {\n  const quesDict: {\n    [key: number]: IQuestion[];\n  } = {};\n\n  rows.forEach((row) => {\n    if (!quesDict[row[0]]) {\n      quesDict[row[0]] = [];\n    }\n    quesDict[row[0]].push({\n      level: row[0],\n      en: row[1].trim(),\n      meanings: [row[2].trim(), row[3].trim()],\n    });\n  });\n  return quesDict;\n};\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  private csvURL = 'assets/data/data.csv';\n  levels = [];\n  constructor(\n    private http: HttpClient,\n    private dataService: DataService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.http.get(this.csvURL, { responseType: 'text' }).subscribe(\n      (data) => {\n        const serializeData = serializeCsvData(csvToArr(data));\n        this.dataService.setQuesDictFromHome(serializeData);\n        this.levels = Object.keys(serializeData);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onClickLevel(level: number) {\n    this.dataService.setQuestionsFromHome(level);\n    this.router.navigate([`level/${level}`], { skipLocationChange: true });\n  }\n}\n","<div id=\"container\">\n  <div id=\"start\">なんたんご</div>\n  <div>\n    <div\n      class=\"level\"\n      *ngFor=\"let level of levels\"\n      (click)=\"onClickLevel(level)\"\n    >\n      {{ level }}\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport _ from 'lodash';\n\nimport { DataService } from '../services/data.service';\n\nconst talkify = (window as any).talkify;\nconst voice = new talkify.Html5Player();\nvoice.forceLanguage('en');\nvoice.setRate(1);\n\ninterface IQuestion {\n  level: string;\n  en: string;\n  meanings: string[];\n}\n\n@Component({\n  selector: 'app-level-detail',\n  templateUrl: './level-detail.component.html',\n  styleUrls: ['./level-detail.component.scss'],\n})\nexport class LevelDetailComponent implements OnInit {\n  private questions = [];\n  private totalChoices = [];\n  QUESTION_NUMBER_PER_LEVEL = 50;\n  choices = [];\n  currentIndex = 0;\n  question: IQuestion = null;\n  valueProcessBar = 0;\n\n  constructor(private dataService: DataService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.questions = this.dataService.getQuestions();\n    this.question = this.questions[this.currentIndex];\n    voice.playText(this.question.en);\n    this.totalChoices = this.dataService.getTotalChoices();\n    this.choices = this.getChoices();\n  }\n\n  getChoices() {\n    if (this.questions[this.currentIndex]) {\n      const opts = _.take(\n        _.shuffle(\n          this.totalChoices.filter(\n            (choice) => choice !== this.questions[this.currentIndex].meanings[1] // the 4th position in record\n          )\n        ),\n        2\n      );\n      opts.push(this.questions[this.currentIndex].meanings[1]); // the 4th position in record\n      return _.shuffle(opts);\n    }\n    return [];\n  }\n\n  onNextQuestion() {\n    if (this.currentIndex >= this.QUESTION_NUMBER_PER_LEVEL - 1) {\n      return this.router.navigate(['result'], { skipLocationChange: true });\n    }\n    this.currentIndex = this.currentIndex + 1;\n    this.question = this.questions[this.currentIndex];\n    voice.playText(this.question.en);\n    this.choices = this.getChoices();\n    this.valueProcessBar = Math.round(\n      (this.currentIndex / this.QUESTION_NUMBER_PER_LEVEL) * 100\n    );\n  }\n}\n","<div id=\"container\">\n  <app-question\n    [question]=\"question\"\n    [choices]=\"choices\"\n    (nextQuestion)=\"onNextQuestion()\"\n  >\n  </app-question>\n  <div class=\"process-container\">\n    <p>\n      <ngb-progressbar\n        type=\"danger\"\n        [value]=\"valueProcessBar\"\n        [striped]=\"true\"\n        [animated]=\"true\"\n        height=\"10px\"\n      ></ngb-progressbar>\n    </p>\n    <div class=\"process-number\"> Progess {{ valueProcessBar }} %</div>\n  </div>\n</div>\n","import {\n  Component,\n  EventEmitter,\n  OnInit,\n  Output,\n  Input,\n  OnDestroy,\n  OnChanges,\n} from '@angular/core';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.scss'],\n})\nexport class QuestionComponent implements OnChanges {\n  // tslint:disable-next-line:no-input-rename\n  @Input('question') question: any;\n  // tslint:disable-next-line:no-input-rename\n  @Input('choices') choices: any;\n  @Output() nextQuestion = new EventEmitter();\n  timer = null;\n  constructor(private dataService: DataService) {}\n  ngOnChanges() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n    this.timer = setTimeout(() => this.onClickAnswer(''), 5000);\n  }\n\n  onClickAnswer(answer: string) {\n    this.nextQuestion.emit();\n    if (answer !== this.question.meanings[1]) {\n      this.dataService.setAnswersIncorrect(this.question);\n    }\n  }\n}\n","<div id=\"question\">\n  <p>{{ question.en }}</p>\n  <div id=\"choices\">\n    <div\n      class=\"choice\"\n      *ngFor=\"let choice of choices\"\n      (click)=\"onClickAnswer(choice)\"\n    >\n      {{ choice }}\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../services/data.service';\n\n@Component({\n  selector: 'app-result',\n  templateUrl: './result.component.html',\n  styleUrls: ['./result.component.scss'],\n})\nexport class ResultComponent implements OnInit {\n  answersIncorrect = [];\n  time = '';\n  constructor(private dataService: DataService) {}\n\n  ngOnInit(): void {\n    const now = new Date();\n    this.answersIncorrect = this.dataService.getAnswersIncorrect();\n    this.time = `${now.getFullYear()}年${now.getMonth() + 1}月${now.getDate()}日`;\n  }\n\n  onClickPrint() {\n    window.print();\n  }\n}\n","<div class=\"result-wrapper\">\n  <div>\n    <div>\n      <h1>英単語補強プリント</h1>\n      <p class=\"result-time\"> 日時： <span>{{ time }}</span> </p>\n      <p>名前：<input type=\"text\" /></p>\n      <p><button (click)=\"onClickPrint()\">印刷</button></p>\n    </div>\n  </div>\n  <div *ngIf=\"answersIncorrect.length > 0\">\n    <div *ngFor=\"let answer of answersIncorrect\" id=\"review\">\n      <div class=\"sentence\">\n        <div class=\"word_en\">{{ answer.en }}</div>\n        <div class=\"word_ja\">{{ answer.meanings[1] }}</div>\n        <div class=\"word_sound\">{{ answer.meanings[0] }}</div>\n      </div>\n    </div>\n  </div>\n  <h3 *ngIf=\"answersIncorrect.length === 0\" class=\"success-message\">\n    Congratulations, you are super!\n  </h3>\n</div>\n","import { Injectable } from '@angular/core';\nimport _ from 'lodash';\n\nexport interface IQuestion {\n  level: number;\n  en: string;\n  meanings: string[];\n}\nconst QUESTION_NUMBER_PER_LEVEL = 50;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataService {\n  private quesDict: {\n    [key: number]: IQuestion[];\n  } = {};\n  private totalQuestions = []; // by level\n  private questions = []; // 50 question per level\n  private totalChoices = [];\n  private answersIncorrect = [];\n\n  constructor() {}\n\n  getQuestions() {\n    return this.questions;\n  }\n  getTotalChoices() {\n    return this.totalChoices;\n  }\n  getAnswersIncorrect() {\n    return this.answersIncorrect;\n  }\n\n  setQuesDictFromHome(data: { [key: number]: IQuestion[] }) {\n    this.quesDict = data;\n  }\n  setQuestionsFromHome(level: number) {\n    this.totalQuestions = this.quesDict[level];\n    this.questions = _.take(\n      _.shuffle(this.totalQuestions),\n      QUESTION_NUMBER_PER_LEVEL\n    );\n    this.totalChoices = this.totalQuestions.map(\n      (question) => question.meanings[1]\n    );\n  }\n  setAnswersIncorrect(answer: IQuestion) {\n    this.answersIncorrect = [...this.answersIncorrect, answer];\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}